/* 
	File written entirely by Nate H - don't be scared to ask questions, this wasn't autogenerated!

	As of Mar 2, 2023, though we plan to change up the behavior a little bit, 
	the file currently defines the endpoint for /opportunities,
	specifically the get & post request behavior.
*/

const { response } = require('express');
var express = require('express');
const { getAllLocs } = require('../models/getAllLocs.model');
const { getAllOpps } = require('../models/getAllOpps.model');
const { getAllOppsByType } = require('../models/getAllOppsByType.model');
const { postOpp } = require('../models/postOpp.model');
const { postAllActiveOpps } = require('../models/postAllActiveOpps.model');

var router = express.Router();

router.get('/', function(req, res, next) {
	var promise = getAllOpps();
	promise.then(function(opps) {	
			res.json(opps);
		},
		function(error) {
			res.status(503).send(error);
		}
	);
});

router.post("/", function(req, res, next){
	if(req.session.perms == 0)
	{
		var promise = postOpp(req);
		promise.then(function(opps){
			res.json(opps);
		},
		function(error) {
		res.status(503).send(error);
		});
	}
	else
	{
		res.status(403).send("You're not authorized to post new opps!");
	}
});

router.get('/active', function(req, res, next) {
	let type = "Active";
	var promise = getAllOppsByType(type);
	promise.then(function(opps) {	
			res.json(opps);
		},
		function(error) {
			res.status(503).send(error);
		}
	);
});

router.get('/archived', function(req, res, next) {
	let type = "Archived";
	var promise = getAllOppsByType(type);
	promise.then(function(opps) {	
			res.json(opps);
		},
		function(error) {
			res.status(503).send(error);
		}
	);
});

router.get('/pending', function(req, res, next) {
	let type = "Pending";
	var promise = getAllOppsByType(type);
	promise.then(function(opps) {	
			res.json(opps);
		},
		function(error) {
			res.status(503).send(error);
		}
	);
});

router.post('/id/status', function(req, res, next){

	var object = {};
	object.id = req.params.id;
	object.status = req.query.status;
	var promise = postAllActiveOpps(object);
	promise.then(function(opps){
		res.json(opps);
	},
	function(error){
		res.status(503).send(error);
	}
	)
})

module.exports = router;